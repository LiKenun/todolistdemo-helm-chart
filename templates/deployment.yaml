apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres
        ports:
        - containerPort: {{ $.Values.postgres.containerPort }}
        env:
        - name: POSTGRES_PASSWORD
          value: {{ $.Values.postgres.password }}
        - name: POSTGRES_USER
          value: {{ $.Values.postgres.user }}
        - name: POSTGRES_DB
          value: {{ $.Values.postgres.database }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: api
  replicas: 2
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: {{ $.Values.api.image }}
        ports:
        - containerPort: {{ $.Values.api.containerPort }}
        env:
        - name: APP_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
          value: org.postgresql.Driver
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://{{ $.Values.postgres.serviceName }}.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.postgres.containerPort }}/{{ $.Values.postgres.database }}"
        - name: SPRING_DATASOURCE_USERNAME
          value: {{ $.Values.postgres.user }}
        - name: SPRING_DATASOURCE_PASSWORD
          value: {{ $.Values.postgres.password }}
        - name: SPRING_JPA_HIBERNATE_DDL_AUTO
          value: update
        - name: SPRING_SQL_INIT_MODE
          value: always
        imagePullPolicy: Always
      imagePullSecrets:
      - name: registry-creds-dpr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: {{ $.Values.frontend.image }}
        ports:
        - containerPort: {{ $.Values.frontend.containerPort }}
        env:
        - name: API_HOST
          value: "{{ $.Values.api.serviceName }}.{{ $.Release.Namespace }}.svc.cluster.local"
        - name: API_PORT
          value: "{{ $.Values.api.containerPort }}"
        imagePullPolicy: Always
      imagePullSecrets:
      - name: registry-creds-dpr
